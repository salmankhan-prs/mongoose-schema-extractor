/**\n * AI Integration Examples\n * \n * Primary use case: Extract schemas for AI/LLM integration\n */\n\nconst { extractSchemas } = require('../dist/index');\nconst mongoose = require('mongoose');\n\n// Basic usage - Extract LLM-ready format\nfunction basicUsage() {\n  const schemaContext = extractSchemas(mongoose, {\n    format: 'llm-compact'\n  });\n  \n  console.log('Schema context for AI:');\n  console.log(schemaContext);\n  return schemaContext;\n}\n\n// AI Agent Integration\nclass DatabaseAI {\n  constructor() {\n    this.schemaContext = extractSchemas(mongoose, { format: 'llm-compact' });\n  }\n  \n  buildPrompt(userQuery) {\n    return `Database Schema:\\n${this.schemaContext}\\n\\nUser Query: \"${userQuery}\"\\nGenerate MongoDB query:`;\n  }\n  \n  async queryFromNaturalLanguage(userQuery) {\n    const prompt = this.buildPrompt(userQuery);\n    // Send prompt to your AI service (OpenAI, Claude, etc.)\n    console.log('AI Prompt:', prompt);\n    return prompt;\n  }\n}\n\n// Different output formats\nfunction showFormats() {\n  console.log('\\n=== Available Formats ===\\n');\n  \n  // Primary: LLM-optimized\n  const llmFormat = extractSchemas(mongoose, { format: 'llm-compact' });\n  console.log('LLM Format (primary):');\n  console.log(llmFormat.substring(0, 200) + '...');\n  \n  // Secondary: Raw JSON\n  const jsonFormat = extractSchemas(mongoose, { format: 'json' });\n  console.log('\\nJSON Format:');\n  console.log(JSON.stringify(jsonFormat, null, 2).substring(0, 200) + '...');\n  \n  // TypeScript interfaces\n  const tsFormat = extractSchemas(mongoose, { format: 'typescript' });\n  console.log('\\nTypeScript Format:');\n  console.log(tsFormat.substring(0, 200) + '...');\n}\n\n// Example usage\nif (require.main === module) {\n  try {\n    // Basic extraction\n    basicUsage();\n    \n    // AI agent example\n    const dbAI = new DatabaseAI();\n    dbAI.queryFromNaturalLanguage('Find all active users');\n    \n    // Show different formats\n    showFormats();\n    \n  } catch (error) {\n    console.error('Error:', error.message);\n    console.log('Make sure to build the project: npm run build');\n  }\n}\n\nmodule.exports = {\n  basicUsage,\n  DatabaseAI,\n  showFormats\n};
